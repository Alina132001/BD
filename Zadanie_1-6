CREATE TABLE student(
id SERIAL PRIMARY KEY,
	
	name VARCHAR(225)NOT NULL,
	surname VARCHAR(225)NOT NULL,
	n_group INTEGER NOT NULL,
	score NUMERIC(3,2),
	address VARCHAR(3000),
	dite_birth DATE
	
)
INSERT INTO student(name,surname,n_group,score,address,dite_birth)
VALUES ('Мария','Ильена',2282,2.33,'Дмитров','1997-06-04')
SELECT name,surname,n_group,score,address,dite_birth
FROM student ORDER BY n_group DESC\\группы по убыванию
SELECT name,surname,n_group,score
FROM student ORDER BY name\\ имена по алфавиту
SELECT name,surname,n_group,score
FROM student  WHERE score BETWEEN 4 and 4.5\\ средний балл от 4 до 4.5

SELECT name,surname,n_group,score
FROM student WHERE n_group::VARCHAR LIKE '2%'

SELECT name,surname,n_group,score
FROM student WHERE name LIKE 'М%'  

SELECT name,surname,n_group,score
FROM student WHERE surname LIKE '%в'

SELECT name,surname,n_group,score
FROM student WHERE score >4.5  ORDER BY score DESC\\сдедний балл больше 4.5+ сортировка

SELECT name,surname,n_group,score
FROM student
LIMIT 2

SELECT count(*)
FROM student

SELECT count(*),n_group
FROM student
Group by n_group

SELECT avg(score)::REAL,n_group \\средний балл больше 4.5
FROM student
Group by n_group
Having count(score)>4.5
 
 Групповые функции
1)
SELECT count(*),n_group
FROM student
Group by n_group
2)
SELECT max(score)::REAL,n_group 
FROM student
Group by n_group
3)
SELECT count(*)surname
FROM student
Group by surname
5)
SELECT  avg(score), SUBSTR(n_group::VARCHAR, 1,1)
FROM student 
Group by  SUBSTR(n_group::VARCHAR, 1,1)
6)
SELECT  max(score)
FROM student
Group by n_group
9)
SELECT *
FROM student
WHERE score=(SELECT max(score)
			FROM student)
			
7)
SELECT n_group,avg(score) as avg 
FROM student 
Group by n_group 
HAVING avg(score)<=3.5

10)
SELECT *
FROM student s
INNER JOIN
(SELECT n_group,max(score)as m_s
 FROM student
 Group by n_group) t
 ON s.n_group = t.n_group
 AND s score= t.m_s

8)
SELECT count(*),to_char(dite_birth('YYYY')
FROM student 
Group by to_char(dite_birth,'YYYY'))

------
Многотабличные
1)
SELECT  s.name,s.surname,h.name
FROM student s,hobby h,student_hobby sh
Where sh.id_student=s.id and sh.id_hobby=h.id

30)
SELECT SUBSTRING (s.name,1,1), max(h.risk),min(h.risk)
FROM student s,student_hobby sh,hobby h
WHERE s.id=sh.id_student and h.id=sh.id_hobby
GROUP BY SUBSTRING(s.name,1,1)


16)
SELECT h.name
FROM hobby h
INNER JOIN(SELECT count(sh.id_student)as countofhob,sh.id_hobby
		   FROM student_hobby sh
		  GROUP BY sh.id_hobby)tt 
		  ON tt.id_hobby=h.id
		  ORDER BY tt.countofhob DESC 
		  LIMIT 1

изменение/удаление/добавление
  1)DELETE FROM student
   WHERE  dite_birth is NULL
   


